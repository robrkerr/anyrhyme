<div class="num_syllables_box"> 
	Find words 
	<!-- <select class="word_type">
		<option value="" selected>words</option>
		<option value="noun">nouns</option> 
	  <option value="adj">adjectives</option>
	  <option value="adv">abverbs</option> 
	  <option value="verb">verbs</option>
	</select> -->
	with
	<select class="select_syllables num_syllables_type">
		<option value="exactly"<%= "selected" unless @query.match_at_least %>>exactly</option> 
	  <option value="at_least"<%= "selected" if @query.match_at_least %>>at least</option>
	</select>
	<select class="select_syllables num_syllables_number">
		<option value="1"<%= "selected" if @query.match_total_syllables == 1 %>>1</option> 
	  <option value="2"<%= "selected" if @query.match_total_syllables == 2 %>>2</option>
	  <option value="3"<%= "selected" if @query.match_total_syllables == 3 %>>3</option>
	  <option value="4"<%= "selected" if @query.match_total_syllables == 4 %>>4</option> 
	  <option value="5"<%= "selected" if @query.match_total_syllables == 5 %>>5</option>
	  <option value="6"<%= "selected" if @query.match_total_syllables == 6 %>>6</option>
	  <option value="7"<%= "selected" if @query.match_total_syllables == 7 %>>7</option>
	  <option value="8"<%= "selected" if @query.match_total_syllables == 8 %>>8</option>
	  <option value="9"<%= "selected" if @query.match_total_syllables == 9 %>>9</option>
	  <option value="10"<%= "selected" if @query.match_total_syllables == 10 %>>10</option>
	</select>
	syllables whose 
	<select class="select_syllables target_order">
		<option value="final"<%= "selected" unless @query.match_to_first %>>final</option> 
	  <option value="first"<%= "selected" if @query.match_to_first %>>first</option>
	</select>
	syllables match the 
	<select class="select_syllables source_order">
		<option value="final"<%= "selected" unless @query.match_from_first %>>final</option> 
	  <option value="first"<%= "selected" if @query.match_from_first %>>first</option>
	</select>
	<select class="select_syllables num_syllables_match">
		<% syllables = @query.word.try(&:syllables) || [] %>
		<% n = (syllables.length > 3) ? 3 : syllables.length %>
		<% 1.upto(n) do |i| %>
			<option value="<%=i%>"<%= "selected" if @query.match_word_syllables == i %>><%=i%></option>
	  <% end %>
	</select>
	syllables of the above word. 
</div>
<div class="outer_container">
<div class="inner_container">
	<div class="front_syllable syllable_container <%= @query.syllable_diagram_object_presence(0)%>"> 
		<div class="chunk_container"> 
			<div class="chunk hidden"></div>
			<div class="chunk matcher <%= @query.syllable_diagram_object_colour(0,0)%>"><input type="text" class="chunk_text" value="<%= @query.syllable_diagram_object_phoneme(0,0)%>"></input></div>
			<div class="match_boxes">
				<input class="match_box matching" type="checkbox" <%= @query.syllable_diagram_object_match(0,0)%>></input>
				<input class="match_box anti_matching" type="checkbox" <%= @query.syllable_diagram_object_antimatch(0,0)%>></input>
			</div>
		</div>
		<div class="chunk_container"> 
			<div class="chunk hidden"></div>
			<div class="chunk matcher <%= @query.syllable_diagram_object_colour(0,1)%>"><input type="text" class="chunk_text" value="<%= @query.syllable_diagram_object_phoneme(0,1)%>"></input></div>
			<div class="match_boxes">
				<input class="match_box matching" type="checkbox" <%= @query.syllable_diagram_object_match(0,1)%>></input>
				<input class="match_box anti_matching" type="checkbox" <%= @query.syllable_diagram_object_antimatch(0,1)%>></input>
			</div>
		</div>
		<div class="chunk_container"> 
			<div class="chunk hidden"></div>
			<div class="chunk matcher <%= @query.syllable_diagram_object_colour(0,2)%>"><input type="text" class="chunk_text" value="<%= @query.syllable_diagram_object_phoneme(0,2)%>"></input></div>
			<div class="match_boxes">
				<input class="match_box matching" type="checkbox" <%= @query.syllable_diagram_object_match(0,2)%>></input>
				<input class="match_box anti_matching" type="checkbox" <%= @query.syllable_diagram_object_antimatch(0,2)%>></input>
			</div>
		</div>
		<div class="syllable_divider"></div> 
	</div>
	<div class="multiple_syllable syllable_container <%= @query.syllable_diagram_object_presence(1)%>"> 
		<div class="chunk_container"> 
			<div class="num_syllables_text blue"><%= @query.syllable_diagram_object_leading %></div>
			<div class="multi_syllables_text"> syllables </div>
		</div>
		<div class="syllable_divider"></div> 
	</div>
	<% syllables = @query.word.try(&:syllables) || [] %>
	<% syllables.each_with_index do |syllable,i| %>
	<div id="syllable<%=i+1%>" class="word_syllable syllable_container <%= @query.syllable_diagram_object_presence(i+2)%>"> 
		<div class="chunk_container"> 
			<div class="chunk hidden"><%=syllable.onset.label%></div>
			<div class="chunk matcher <%= @query.syllable_diagram_object_colour(i+2,0)%>"><input type="text" class="chunk_text" value="<%= @query.syllable_diagram_object_phoneme(i+2,0)%>"></input></div>
			<div class="match_boxes">
				<input class="match_box matching" type="checkbox" <%= @query.syllable_diagram_object_match(i+2,0)%>></input>
				<input class="match_box anti_matching" type="checkbox" <%= @query.syllable_diagram_object_antimatch(i+2,0)%>></input>
			</div>
		</div>
		<div class="chunk_container"> 
			<div class="chunk hidden"><%=syllable.nucleus.label + "#{syllable.stress}"%></div>
			<div class="chunk matcher <%= @query.syllable_diagram_object_colour(i+2,1)%>"><input type="text" class="chunk_text" value="<%= @query.syllable_diagram_object_phoneme(i+2,1)%>"></input></div>
			<div class="match_boxes">
				<input class="match_box matching" type="checkbox" <%= @query.syllable_diagram_object_match(i+2,1)%>></input>
				<input class="match_box anti_matching" type="checkbox" <%= @query.syllable_diagram_object_antimatch(i+2,1)%>></input>
			</div>
		</div>
		<div class="chunk_container"> 
			<div class="chunk hidden"><%=syllable.coda.label%></div>
			<div class="chunk matcher <%= @query.syllable_diagram_object_colour(i+2,2)%>"><input type="text" class="chunk_text" value="<%= @query.syllable_diagram_object_phoneme(i+2,2)%>"></input></div>
			<div class="match_boxes">
				<input class="match_box matching" type="checkbox" <%= @query.syllable_diagram_object_match(i+2,2)%>></input>
				<input class="match_box anti_matching" type="checkbox" <%= @query.syllable_diagram_object_antimatch(i+2,2)%>></input>
			</div>
		</div>
		<% if i < (syllables.length-1) %>
			<div class="syllable_divider"></div>
		<% end %>
	</div>
	<% end %>
	<div class="reverse_multiple_syllable syllable_container <%= @query.syllable_diagram_object_presence(syllables.length+2)%>"> 
		<div class="syllable_divider"></div> 
		<div class="chunk_container"> 
			<div class="num_syllables_text blue"><%= @query.syllable_diagram_object_leading %></div>
			<div class="multi_syllables_text"> syllables </div>
		</div>
	</div>
	<div class="back_syllable syllable_container <%= @query.syllable_diagram_object_presence(syllables.length+3)%>"> 
		<div class="syllable_divider"></div> 
		<div class="chunk_container"> 
			<div class="chunk hidden"></div>
			<div class="chunk matcher <%= @query.syllable_diagram_object_colour(syllables.length+3,0)%>"><input type="text" class="chunk_text" value="*"></input></div>
			<div class="match_boxes">
				<input class="match_box matching" type="checkbox" <%= @query.syllable_diagram_object_match(syllables.length+3,0)%>></input>
				<input class="match_box anti_matching" type="checkbox" <%= @query.syllable_diagram_object_antimatch(syllables.length+3,0)%>></input>
			</div>
		</div>
		<div class="chunk_container"> 
			<div class="chunk hidden"></div>
			<div class="chunk matcher <%= @query.syllable_diagram_object_colour(syllables.length+3,1)%>"><input type="text" class="chunk_text" value="*"></input></div>
			<div class="match_boxes">
				<input class="match_box matching" type="checkbox" <%= @query.syllable_diagram_object_match(syllables.length+3,1)%>></input>
				<input class="match_box anti_matching" type="checkbox" <%= @query.syllable_diagram_object_antimatch(syllables.length+3,1)%>></input>
			</div>
		</div>
		<div class="chunk_container"> 
			<div class="chunk hidden"></div>
			<div class="chunk matcher <%= @query.syllable_diagram_object_colour(syllables.length+3,2)%>"><input type="text" class="chunk_text" value="*"></input></div>
			<div class="match_boxes">
				<input class="match_box matching" type="checkbox" <%= @query.syllable_diagram_object_match(syllables.length+3,2)%>></input>
				<input class="match_box anti_matching" type="checkbox" <%= @query.syllable_diagram_object_antimatch(syllables.length+3,2)%>></input>
			</div>
		</div>
	</div>
</div>
</div>
<div class="quick_match_text">Quick match:</div>
<%= form_for @query, :url => query_path do |q| %>
  <%= q.text_field :id, :type => :hidden, :value => (@query.id || "") %>
  <%= q.text_field :word_type, :type => :hidden, :value => @query.word_type %>
  <%= q.submit "Perfect Rhyme", :class => 'preset button' %>
<% end %>
<!-- <%= form_for @query, :url => query_path do |q| %>
  <%= q.text_field :id, :type => :hidden, :value => (@query.id || "") %>
  <%= q.text_field :word_type, :type => :hidden, :value => @query.word_type %>
  <%= q.text_field :match_string, :type => :hidden, :value => @query.vowels_only_match_string %>
  <%= q.submit "Vowels Only", :class => 'preset button' %>
<% end %> -->
<%= form_for @query, :url => query_path do |q| %>
  <%= q.text_field :id, :type => :hidden, :value => (@query.id || "") %>
  <%= q.text_field :word_type, :type => :hidden, :value => @query.word_type %>
  <%= q.text_field :match_string, :type => :hidden, :value => @query.weak_rhyme_match_string %>
  <%= q.submit "Weak Rhyme", :class => 'preset button' %>
<% end %>
<%= form_for @query, :url => query_path do |q| %>
  <%= q.text_field :id, :type => :hidden, :value => (@query.id || "") %>
  <%= q.text_field :word_type, :type => :hidden, :value => @query.word_type %>
  <%= q.text_field :match_string, :type => :hidden, :value => @query.portmanteau1_match_string %>
  <%= q.submit "Portmanteau 1", :class => 'preset button' %>
<% end %>
<%= form_for @query, :url => query_path do |q| %>
  <%= q.text_field :id, :type => :hidden, :value => (@query.id || "") %>
  <%= q.text_field :word_type, :type => :hidden, :value => @query.word_type %>
  <%= q.text_field :match_string, :type => :hidden, :value => @query.portmanteau2_match_string %>
  <%= q.submit "Portmanteau 2", :class => 'preset button' %>
<% end %>
<%= form_for @query, :url => query_path do |q| %>
  <%= q.text_field :id, :type => :hidden, :value => (@query.id || "") %>
  <%= q.text_field :word_type, :class => 'update_word_type', :type => :hidden, :value => @query.word_type %>
  <%= q.text_field :match_string, :class => 'update_match_string', :type => :hidden, :value => @query.match_string %>
  <%= q.submit "Update", :class => 'update button' %>
<% end %>
<script>
	$(document).ready(function() {
		var resize_inner_container = function() {
			var inner_width = 0;
			$(".inner_container").each(function() {
				$(this).find(".syllable_container").each(function() {
					if (!$(this).hasClass("no_syllable")) {
						inner_width += $(this).width();
					}
				});
				$(this).css({"width": inner_width});
			});
		}
		var populate_form_fields_from_diagram = function() {
			var match_string = ""
			$(".syllable_container").each(function() {
				if ($(this).hasClass("no_syllable")) {
					match_string += "false,";	
				} else if ($(this).hasClass("multiple_syllable") || $(this).hasClass("reverse_multiple_syllable")) {
					var label = $(this).find(".chunk_container").find(".num_syllables_text").html();
					if (label[label.length-1] == "+") {
						match_string += (label.substr(0,label.length-1) + ":true,");
					} else {
						match_string += (label.substr(0,label.length) + ":false,");
					}
				} else {
					$(this).find(".chunk_container").each(function() {
						var label = $(this).find(".matcher").find(".chunk_text").val();
						var matched = $(this).find(".match_boxes").find(".matching").is(':checked');
						match_string += label;
						if (matched) {
							match_string += ";true:";
						} else {
							match_string += ";false:";
						}
					});
					match_string = match_string.substr(0,match_string.length-1);
					match_string += ",";
				}
			});
			$(".update_match_string").val(match_string.substr(0,match_string.length-1));
		};
		var update_diagram = function() {
			if ($(".num_syllables_match").val() > $(".num_syllables_number").val()) {
				$(".num_syllables_number").val($(".num_syllables_match").val());
			}
			var match_word_length = $(".num_syllables_match").val();
			if ($(".num_syllables_number").val() > match_word_length) {
				var leading = $(".num_syllables_number").val() - match_word_length;
				$(".word_syllable").removeClass("no_syllable");
				if ($(".num_syllables_type").val() == "at_least") {
					$(".num_syllables_text").html(leading-1 + "+");
					if ($(".target_order").val()=="final") {
						$(".multiple_syllable").removeClass("no_syllable");
						$(".front_syllable").removeClass("no_syllable");
						$(".reverse_multiple_syllable").addClass("no_syllable");
						$(".back_syllable").addClass("no_syllable");
					} else {
						$(".multiple_syllable").addClass("no_syllable");
						$(".front_syllable").addClass("no_syllable");
						$(".reverse_multiple_syllable").removeClass("no_syllable");
						$(".back_syllable").removeClass("no_syllable");
					}
				} else if (leading > 1) {
					$(".num_syllables_text").html(leading-1);
					if ($(".target_order").val()=="final") {
						$(".multiple_syllable").removeClass("no_syllable");
						$(".front_syllable").removeClass("no_syllable");
						$(".reverse_multiple_syllable").addClass("no_syllable");
						$(".back_syllable").addClass("no_syllable");
					} else {
						$(".multiple_syllable").addClass("no_syllable");
						$(".front_syllable").addClass("no_syllable");
						$(".reverse_multiple_syllable").removeClass("no_syllable");
						$(".back_syllable").removeClass("no_syllable");
					}
				} else {
					if ($(".target_order").val()=="final") {
						$(".multiple_syllable").addClass("no_syllable");
						$(".front_syllable").removeClass("no_syllable");
						$(".reverse_multiple_syllable").addClass("no_syllable");
						$(".back_syllable").addClass("no_syllable");
					} else {
						$(".multiple_syllable").addClass("no_syllable");
						$(".front_syllable").addClass("no_syllable");
						$(".reverse_multiple_syllable").addClass("no_syllable");
						$(".back_syllable").removeClass("no_syllable");
					}
				}
			} else {
				$(".front_syllable").addClass("no_syllable");
				$(".back_syllable").addClass("no_syllable");
				if ($(".num_syllables_type").val() == "at_least") {
					$(".num_syllables_text").html("0+");
					if ($(".target_order").val()=="final") {
						$(".multiple_syllable").removeClass("no_syllable");
						$(".reverse_multiple_syllable").addClass("no_syllable");
					} else {
						$(".multiple_syllable").addClass("no_syllable");
						$(".reverse_multiple_syllable").removeClass("no_syllable");
					}
				} else {
					if ($(".target_order").val()=="final") {
						$(".multiple_syllable").addClass("no_syllable");
						$(".reverse_multiple_syllable").addClass("no_syllable");
					} else {
						$(".multiple_syllable").addClass("no_syllable");
						$(".reverse_multiple_syllable").addClass("no_syllable");
					}
				}
			}
			if ($(".num_syllables_match").val() <= word_length) {
				var missing = word_length - $(".num_syllables_match").val();
				for (var i = 1; i <= word_length; i++) {
					if ($(".source_order").val()=="final") {
						var num = i;
					} else {
						var num = word_length - i + 1;
					}
					if (i <= missing) {
						$("#syllable" + num).addClass("no_syllable");	
					} else {
						$("#syllable" + num).removeClass("no_syllable");	
						if ((i==missing+1) && ($(".source_order").val()=="first")) {
							$("#syllable" + num).find(".syllable_divider").css({"width":"0px","margin": "0px"});
						} else {
							$("#syllable" + num).find(".syllable_divider").css({"width":"2px","margin": "0px 10px"});
						}
					}
				}	
			}
			resize_inner_container();
		}
		$(".chunk_text").each(function() {
			$(this).bind("propertychange keyup input paste", function(event) {
				var checkboxes = $(this).parent(".chunk").parent(".chunk_container").find(".match_boxes");
	      if ($(this).val()=="*") {
	      	$(this).parent(".chunk").removeClass("green");
	      	$(this).parent(".chunk").removeClass("red");
	      	$(this).parent(".chunk").addClass("blue");
	      	checkboxes.find(".matching").each(function(){ this.checked = false; });
	      	checkboxes.find(".anti_matching").each(function(){ this.checked = false; });
	      } else {
	      	if ($(this).parent(".chunk").hasClass("blue")) {
	      		checkboxes.find(".matching").each(function(){ this.checked = true; });
	      		$(this).parent(".chunk").removeClass("red");
		      	$(this).parent(".chunk").removeClass("blue");
		      	$(this).parent(".chunk").addClass("green");
	      	}
	      }
			});
		});
		$(".match_box").click(function() {
			var chunk = $(this).parent(".match_boxes").parent(".chunk_container").find(".matcher");
			if (this.checked) {
				if ($(this).hasClass("matching")) {
	      	$(this).parent(".match_boxes").find(".anti_matching").each(function(){ this.checked = false; });
	      	chunk.removeClass("red");
	      	chunk.removeClass("blue");
	      	chunk.addClass("green");
				} else {
					$(this).parent(".match_boxes").find(".matching").each(function(){ this.checked = false; });
	      	chunk.removeClass("green");
	      	chunk.removeClass("blue");
	      	chunk.addClass("red");
				}
				if (chunk.find(".chunk_text").val()=="*") {
      		var corresponding_chunk = chunk.parent(".chunk_container").find(".hidden").html();
      		chunk.find(".chunk_text").val(corresponding_chunk);	
      	}
			} else {
				this.checked = false;
      	chunk.removeClass("green");
      	chunk.removeClass("red");
      	chunk.addClass("blue");
      	chunk.find(".chunk_text").val("*");
			}
			populate_form_fields_from_diagram();
		});
		var word_length = $(".word_syllable").length;
		update_diagram();
		$(".select_syllables").change(function() {
			update_diagram();
			populate_form_fields_from_diagram();
		});
		$(".chunk_text").change(function() {
			populate_form_fields_from_diagram();
		});
		// $(".word_type").change(function() {
		// 	$("#update_word_type").val($(".word_type").val());
		// });
  });
</script>
